version: '3.4'
services:
  ollama:
    container_name: ollama
    image: ollama/ollama  # Replace with specific Ollama version if needed
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            capabilities: ["gpu"]
            count: all  # Adjust count for the number of GPUs you want to use
    volumes:
      - ollama:/root/.ollama
    restart: always

  # TODO just to test, later change to https://huggingface.co/OrdalieTech/Solon-embeddings-base-0.1 
  t2v-custom:
    runtime: nvidia
    image: solon-inference
    environment:
      ENABLE_CUDA: 0


  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
  # file server

  postgresql:
    image: pgvector/pgvector:0.7.0-pg15
    shm_size: 2g
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"  # Expose PostgreSQL default port
    networks:
      default:
        aliases:
          - postgresql

    volumes:
      - ./postgresql_data:/var/lib/postgresql/data  # Persistent data volume

  documentation:
    build:
      context: ./documentation
    ports:
      - "8004:3000"


  webapp:
    depends_on:
      - postgresql
    build:
      context: ./webapp
      args:
        - NEXT_PUBLIC_SERVER_URL=${NEXT_PUBLIC_SERVER_URL}
        - DATABASE_URL=${DATABASE_URL}
        - OLLAMA_URL=${OLLAMA_URL}
        - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
        - NEXTAUTH_URL=${NEXTAUTH_URL}
        - NEXT_PUBLIC_S3_ACCESS_KEY=${S3_ACCESS_KEY}
        - NEXT_PUBLIC_S3_SECRET_KEY=${S3_SECRET_KEY}
        - NEXT_PUBLIC_S3_ENDPOINT=${S3_ENDPOINT}
        - NEXT_PUBLIC_S3_REGION=${S3_REGION}
        - NEXT_PUBLIC_S3_BUCKET=${S3_BUCKET}
        - NEXT_PUBLIC_WEBAPP_URL=${NEXT_PUBLIC_WEBAPP_URL}
        - S3_ACCESS_KEY=${S3_ACCESS_KEY}
        - S3_SECRET_KEY=${S3_SECRET_KEY}
        - S3_ENDPOINT=${S3_ENDPOINT}
        - S3_REGION=${S3_REGION}
        - S3_BUCKET=${S3_BUCKET}
    ports:
      - "8002:3000"
    environment:
      - NEXT_PUBLIC_S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - NEXT_PUBLIC_S3_SECRET_KEY=${S3_SECRET_KEY}
      - NEXT_PUBLIC_S3_ENDPOINT=${S3_ENDPOINT}
      - NEXT_PUBLIC_S3_REGION=${S3_REGION}
      - NEXT_PUBLIC_S3_BUCKET=${S3_BUCKET}
      - NEXT_PUBLIC_WEBAPP_URL=${NEXT_PUBLIC_WEBAPP_URL}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_REGION=${S3_REGION}
      - S3_BUCKET=${S3_BUCKET}
      - DATABASE_URL=${DATABASE_URL}
      - OLLAMA_URL=${OLLAMA_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
    healthcheck:
      test: ["CMD", "npx", "prisma", "db", "push"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    runtime: nvidia
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_REGION=${S3_REGION}
      - S3_BUCKET=${S3_BUCKET}
    build:
      context: ./server
    ports:
      - "8000:8000"
    volumes:
      - ./documents:/server/documents
      - ./ftp-data:/server/ftp-data

  # # automatically index files when upoaded to ftp
  # ftp_processing:
  #   runtime: nvidia
  #   environment:
  #     - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
  #     - S3_ACCESS_KEY=${S3_ACCESS_KEY}
  #     - S3_SECRET_KEY=${S3_SECRET_KEY}
  #     - S3_ENDPOINT=${S3_ENDPOINT}
  #     - S3_REGION=${S3_REGION}
  #     - S3_BUCKET=${S3_BUCKET}
  #   build:
  #     context: ./server
  #   volumes:
  #     - ./documents:/server/documents
  #     - ./ftp-data:/server/ftp-data
  #   command: ["python", "app/processing.py"]

  ftp:
    image: stilliard/pure-ftpd:hardened
    container_name: pure-ftpd
    ports:
      - "8003:21"
      - "30000-30009:30000-30009"
    volumes:
      - "./ftp-data:/home/ftpuser"
      - "./passwd:/etc/pure-ftpd/passwd"
      - "/etc/ssl/private/:/etc/ssl/private/"
    environment:
      - FTP_USER_NAME=scienceinfuse
      - FTP_USER_PASS=${FTP_PASSWORD}
      - FTP_USER_HOME=/home/ftpuser
      - PUBLICHOST=${SERVER_IP}
      - PURE_FTPD_FLAGS=--tls=2
    restart: always

  weaviate:
    image: semitechnologies/weaviate:1.25.4
    restart: on-failure:0
    ports:
    - 8080:8080
    - 50051:50051
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8080'
      - --scheme
      - http
    volumes:
      - ./weaviate_data:/var/lib/weaviate
      - ./weaviate_backups:/var/lib/weaviate_backups
    environment:
      QUERY_DEFAULTS_LIMIT: 20
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: text2vec-transformers
      ENABLE_MODULES: backup-filesystem,text2vec-transformers
      TRANSFORMERS_INFERENCE_API: http://t2v-custom:8080
      CLUSTER_HOSTNAME: 'node1'
      BACKUP_FILESYSTEM_PATH: /var/lib/weaviate_backups

volumes:
  ollama:
